site_name: ErgoDocs
site_url: https://docs.ergoplatform.com
repo_url: https://github.com/glasgowm148/ergodocs
edit_uri: edit/main/docs/

theme:
    name: material
    custom_dir: overrides
    #favicon: assets/favicon.png
    palette: # dark scheme toggle on material + dark orange
      - scheme: default
        primary: red
        toggle:
          icon: material/toggle-switch-off-outline
          name: Switch to dark mode
      - scheme: slate
        primary: red
        toggle:
          icon: material/toggle-switch
          name: Switch to light mode
    features:
        - content.action.edit
        - content.action.view
        - content.code.copy
        - navigation.tabs
        #- navigation.instant
        #- navigation.sections # The bold sections in navigation
        - navigation.tracking
        - navigation.indexes
        - content.tabs.link
        - toc.follow

      #  - toc.integrate
    logo: assets/logo.png
    font:
      text: Roboto
extra_css: 
  - assets/extra.css
  - assets/neoteroi-mkdocs.css
  #- https://unpkg.com/mermaid@8.5.1/dist/mermaid.css #404 ? 
extra_javascript:
  - assets/extra.js
  #- assets/mathjax.js
  - https://polyfill.io/v3/polyfill.min.js?features=es6
  - https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js
  - https://unpkg.com/mermaid@8.5.1/dist/mermaid.min.js
 # - https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS_HTML

  

extra:
  version:
    provider: mike
  analytics:
    provider: google
    property: G-5XM6BXT041


#extra:
#  generator: false


plugins:
  - search
  - mkdocs-jupyter #https://github.com/danielfrg/mkdocs-jupyter
  - section-index #https://github.com/oprypin/mkdocs-section-index
  #- awesome-pages https://github.com/lukasgeiter/mkdocs-awesome-pages-plugin
  - autolinks 
  - tags: # https://squidfunk.github.io/mkdocs-material/setup/setting-up-tags/#
      tags_file: tags.md
  #- categories
  #- exclude-search # https://github.com/chrieke/mkdocs-exclude-search
  #- semiliterate # http://studioinfinity.org/semiliterate/mkdocs_semiliterate/plugin/
  #- awesome-list
  #- pagenav-generator #https://github.com/Andre601/mkdocs-pagenav-generator



markdown_extensions:
  - codehilite
  - extra
  - tables
  - neoteroi.cards
  - meta
  - fenced_code
  - toc:
        permalink: "#"
        baselevel: 1
        toc_depth: 3
  - admonition
  - pymdownx.inlinehilite
  - pymdownx.superfences:
      custom_fences:
        - name: mermaid
          class: mermaid
          format: !!python/name:pymdownx.superfences.fence_div_format
  - pymdownx.arithmatex:
      generic: true
  - pymdownx.tabbed:
      alternate_style: true 



nav:
  - Introduction:
    - Getting Started: index.md
    - Why Ergo:
      - dev/protocol/why.md
      - FAQ: faq.md
      - Common Misconceptions: fud-faq.md
    - Key Features: 
      - dev/protocol/index.md
      - Protocol: dev/protocol/index.md
      - eUTxO:
        - dev/protocol/eutxo.md
        - UTxO vs Account: dev/protocol/eutxo/accountveutxo.md
        - Atomic Swaps: dev/protocol/eutxo/atomic.md
      - NIPoPoWs:
        - dev/protocol/nipopows.md
        - Light Clients: dev/protocol/nipopow/nipopow_nodes.md
        - Light Miners: dev/protocol/nipopow/logspace.md
        - Sidechains: dev/protocol/nipopow/nipopow-sidechains.md
      - Privacy: dev/protocol/zkp.md
      - Storage Rent: dev/protocol/storage-rent.md
      - Autolykos: dev/protocol/autolykos-protocol.md
    - Scaling: 
      - dev/protocol/scaling.md
      - Layer 0:
        - dev/protocol/scaling/layer0.md
        - Weak Blocks: uses/sidechains/weak-blocks.md
      - Layer 1: dev/protocol/scaling/layer1.md
      - Layer 2: dev/protocol/scaling/layer2.md
      - Discussions:
        - Roadmaps: dev/protocol/scaling/roadmap.md
        - Transactions Per Second: dev/protocol/scaling/TPS.md
        - Atomic Composability: dev/protocol/scaling/atomic-composability.md
    - Documents: 
      - documents.md
      - Research & Whitepapers: documents.md
      - Social Contract: social_contract.md
      - Audit: dev/protocol/audit.md
      - Transparency Report: ergo-foundation-2022.md
      - The Howey Test: security.md
      - Privacy Guide: doc/privacy-guide.md
      - Glossary: glossary.md    
    - Events: 
      - Events: events/index.md
      - ERGOHACK: events/ergohack.md
      - ErgoSummit: events/ergosummit.md

  #
  # ECOSYSTEM SECTION
  #
  - Ecosystem: 
    - uses/index.md
    - Standards: 
      - contribute/standards.md
      - Chat Bridge: contribute/standards/chat-bridge.md
      - Analytics: contribute/standards/analytics.md
      - KYA: contribute/standards/kya.md
      - Community Guidelines: contribute/standards/guidelines.md

    - Infrastructure: 
      - Rosen Bridge: eco/rosen.md
      - Oracles: 
        - uses/oracles.md
        - Oracle Pools V2: eco/oracles-v2.md
        - Mixicles: uses/mixicles.md
      - Tooling:
        - Crux Finance: eco/crux.md
        - Thz.FM: eco/thz-fm.md
        - Azorus: eco/azorus.md
        - TabbyPOS: eco/tabbypos.md
        - ZenGate Global:
          - eco/zengate.md
          - Solaris Portal: eco/solaris.md
          - Cyberiad: eco/cyberaid.md
      - Sidechains: 
        - uses/sidechains.md
        - ErgoData: uses/ErgoData.md
        - SentientChain: uses/sentientchain.md
        - PoUW: uses/pouw.md
        
    - Financial:
      - Stablecoins: 
        - uses/stablecoins.md
        - SigmaUSD:
          - uses/sigmausd.md
          - Examples: uses/sigmausd/examples.md
          - Mining Incentives: uses/sigmausd/mining-incentives.md
          - Other Stablecoins: uses/sigmausd/comparison.md
          - Why?: uses/sigmausd/why-sigusd.md
        - DexyGold: eco/dexy.md
        - SigmaGold: eco/siggold.md
        - ChainCash: uses/chaincash.md
      - DegFi:
        - uses/degfi.md
        - Hodlcoin: eco/hodlcoin.md
        - Auction Coin: eco/auction-coin.md
        - Grand Gambit: eco/grand-gambit.md
        - NightOwl Casino: eco/nightowl.md
        - Obolflip: eco/obolflip.md
        - Lotteries: uses/lottery.md
      - Lending:
        - uses/lending.md
        - duckpools: eco/duckpools.md
        - EXLE: eco/ergolend.md
        - Micro Credit: dev/scs/microcredit.md
        - Mutual Credit: uses/mutual_credit.md
      - Bonds:
        - SigmaFi: eco/sigmafi.md
        - Bonding Curve: uses/bonding.md
      - Derivatives:
        - uses/deriv.md
        - Tensile: eco/tensile.md
        - Options: 
          - uses/options.md
          - SigmaO: eco/sigmao.md
      - CrowdFunding: 
        - uses/crowdfunding.md
        - ErgoRaffle: eco/ergoraffle.md
        - Sigma Subscriptions: eco/sigma-subscriptions.md
        - ErgoWell: eco/ergowell.md
        - ErgoFund: uses/ergofund.md
      - Grid Trading: uses/grid_trading.md
      - Further Ideas:
        - Prediction Markets: uses/prediction_markets.md
        - Insurance: uses/insurance.md
        - A CBDC For All: uses/cbdc.md
        - Tokens:
          - ICOs: uses/ergo-ico.md
          - Index Coins: uses/index_coins.md
          - PoW Tokens: uses/PoW_tokens.md
          - Perpetual Tokens: uses/perpetual.md
          - Buy Back Guarantees: uses/dex-buyback.md

     

    - Exchanges:
      - uses/dex.md
      - Spectrum Finance: eco/spectrum.md
      - Palmyra: eco/palmyra.md
      - Machina Finance: eco/machina-finance.md
      - P2P: 
          - eco/p2p-trading.md
          - Token Jay: eco/token-jay.md
          - Analog Ergo: eco/analog-ergo.md
          - Single Tx Swap: eco/single-tx-swap.md
      - Others:
        - Local Exchange Trading Systems (LETS): 
          - uses/lets.md
          - Basic Implementation: uses/lets/basic-imp.md
          - Trustless LETS: uses/lets/trustless-lets.md


    - NFTs:
      - uses/nft.md
      - Ergo Auctions: eco/ergo-auctions.md
      - SkyHarbor: eco/skyharbor.md
      - Lilium: eco/lilium.md
      - SigmaStamp: eco/sigma-stamp.md
  
    - DAOs:
      - uses/dao.md 
      - ErgoPad: eco/ergopad.md
      - Paideia: eco/paideia.md

    - Privacy:      
      - ZK Treasury: uses/zkt.md
      - Mixing: 
        - uses/mixer.md
        - ErgoMixer: 
          - eco/ergomixer.md
          - Identifiability: eco/ergomixer/identifiability.md
          - Best Practices: eco/ergomixer/best-practices.md
          - FAQ: eco/ergomixer/mixer-faq.md
          - Token: eco/ergomixer/token.md
          - Install on Android: eco/ergomixer/mixer-android.md
        - SigmaJoin: eco/sigmajoin.md
        - Stealth Addresses: uses/stealth-address.md
      - Decentralised ID:
        - Ergo Nation: eco/ergonation.md





    - Gaming: 
      - uses/gaming.md
      - BlitzTCG: eco/blitz.md
      - Metaverse:
        - uses/metaverse.md
        - Cyberverse: eco/cyberverse.md
        - Sigmavalley: eco/sigmavalley.md
      - BlobsTopia: eco/blobstopia.md
      - ErgoGames.io:
        - Digigoats: eco/digigoats.md
        - Monster Pub Brawl: eco/monsterpub.md
        - Project Tesseract: eco/project-tesseract.md
    - Further Ideas: 
        - ProfitSharing: uses/profit.md
        - Email Client for Blocked Internet: uses/blocked_web.md
        - Flash Loans: uses/flash-loans.md
    - Miner Tooling: eco/miner-tooling.md

      # - Context Claims: uses/context-claims.md
    #  - Asset Tokenisation: uses/tokenisation.md
      # - Privacy: uses/privacy.md
    #  - Collateral Mining: uses/collateral-mining.md
    #  - Math Fun: uses/math_fun.md
    #  - CDBC: uses/cbdc.md
    # - Atomic Swaps: dev/protocol/atomic.md
  

  - Developers: 
    - dev/start.md
    - ðŸ“Œ Getting Started: dev/get-started.md
    - Anatomy of Ergo:
      - Box: 
        - dev/data-model/box.md
        - Registers: dev/data-model/box/registers.md
        - Assets: 
          - Tokens:
            - dev/data-model/box/tokens.md
            - Minting a token: dev/tokens/issue.md
            - Creating a perpetual token: dev/tokens/perpetual.md
            - Burning a token: dev/tokens/burn.md
          - Non-Fungible Tokens:
            - NFTs: dev/tokens/nfts/index.md
            - Minting a NFT: 
              - dev/tokens/nfts/create.md
              - Design V1 v V2: dev/tokens/nfts/v1v2.md
              - Simple Example: dev/tokens/nfts/nft-examples.md
              - On-chain NFTs: dev/tokens/nfts/on-chain.md
            - Royalties: dev/tokens/nfts/royalties.md
          - Singletons: dev/tokens/singletons.md
          - Standards:
            - Asset Standard: dev/tokens/standards/eip4.md
            - Geniune Token Verification: dev/tokens/standards/eip21.md
            - Auction Contract: dev/tokens/standards/eip22.md
            - Artwork Contract: dev/tokens/standards/eip24.md
        - Modelling: dev/data-model/box/box_modeling.md
      - Addresses: 
        - dev/wallet/address.md
        - Types: dev/wallet/address/address_types.md
        - Validation: dev/wallet/address/address_validation.md
        - Encoding: assets/py/Ergo_Address_Encoding.ipynb
      - Transactions: 
        - dev/protocol/transactions.md
        - Composing Transactions:
          - dev/protocol/tx/composing.md
          - Sending A Chained Transaction: dev/anatomy/transactions/chained.md
          - Frameworks: 
            - ErgoPay:
              - ErgoPay: dev/wallet/payments/ergopay/ergo-pay.md
              - Tutorial: dev/wallet/payments/ergopay/ep-tutorial.md
            - ErgoAuth: dev/wallet/payments/ergoauth.md
            - dApp Connector: dev/wallet/payments/dApp.md
            - Proxy Contracts:
              - dev/wallet/payments/proxy.md
              - Assembler: dev/stack/assembler.md
          - Manually: 
            - Format: dev/protocol/tx/format.md
            - Merkle Tree: dev/protocol/tx/tx-merkle.md
            - Signing: dev/protocol/tx/signing.md
            - Signing Backend: tutorials/sign-tx.md
            - Validation: dev/protocol/tx/validation.md
            - Data Inputs: dev/protocol/tx/read-only-inputs.md
            - Fees: dev/protocol/tx/min-fee.md
            - Unified Transactions: dev/protocol/tx/unified.md
        - Resources: 
          - Standards:
            - Babel Fees: dev/protocol/tx/babel-fees.md
            - Proxy Contracts: dev/wallet/payments/standards/eip17.md
            - ErgoPay Protocol: dev/wallet/payments/standards/eip20.md
            - Payment Request URI: dev/wallet/payments/standards/eip25.md
            - Just-In-Time Costing: node/jitc.md
          - ErgoTool: dev/stack/ergotool.md
          - Model Transaction: dev/protocol/tx/model-tx.md

      - Block: dev/data-model/block.md
      - Wallets:
        - dev/wallets.md
        - Satergo: dev/wallet/satergo.md
        - MultiSig: 
          - dev/wallet/multisig.md
          - Minotaur: dev/wallet/minotaur-multisig.md
        - Ledger: dev/wallet/payments/ledger.md
        - Integration: dev/Integration/guide.md
        - Standards:
          - UTXO-Set Scanning Wallet API: dev/wallet/standards/eip1.md
          - Deterministic Wallet Standard: dev/wallet/standards/eip3.md
          - Cold Wallet: dev/wallet/standards/eip19.md
      #- UTXO-State: 
    - Development Stack: 
      - dev/start.md
      - Starter Tutorial: dev/stack/basics.md
      - Server: dev/stack/server.md
      - Browser: dev/stack/browser.md
      - Desktop: dev/stack/desktop.md
      - Mobile: 
        - dev/stack/mobile.md
        - iOS: dev/stack/iOS.md
        - Android: dev/stack/android.md
    - Interacting with Ergo:
      - Node:
        - node/install.md
        - Setup: 
          - node/install/manual.md
          - Troubleshooting: node/install/troubleshooting.md
          - FAQ: node/install/node-faq.md
          - Pi: node/install/pi.md
          - Android: node/install/node-android.md
          - Docker: node/install/docker.md          
        - Testnet: 
          - node/testnet.md
          - Full Sync: node/testnet/testnet-full.md
          - CPU Mining: node/testnet/cpu-mining.md
          - Fork your own chain: node/testnet/mine-your-own-chain.md
          - Resources: node/testnet/testnet-resources.md
        #- Architecture: node/architecture.md
        
        
  
        - Protocol: 
          - node/protocol.md
          - P2P:
            - dev/p2p/index.md
            - Handshaking: dev/p2p/p2p-handshake.md
            - Network Messages: dev/p2p/network.md
          - Peer Management: node/peer-management.md
          - Modifiers: 
            - node/modifiers.md
            - Modifiers Processing: node/modifiers-processing.md
            - Modifiers Validation: node/modifiers-validation.md
          
            # - Modifiers Exchange: dev/p2p/modifiers.md
            # - BlockP2P: dev/p2p/BlockP2P.md
          - Synchronisation: node/synchronisation.md
          
        - Configuration:
          - Node Wallet: 
            - node/wallet.md
            - Hierarchical keys: dev/wallet/keys.md
            - Wallet Setup: node/wallet-setup.md
          - Swagger API: 
            - node/swagger.md
            - Indexed Node API: node/indexed-node.md
          - Configuration Files: 
            - application.conf: 
              - node/conf.md
              - ergo: 
                - node: node/conf/conf-node.md
                - cache: node/conf/conf-cache.md
                - chain: node/conf/conf-chain.md
                - wallet: node/conf/conf-wallet.md
                - voting: node/conf/conf-voting.md
              - bounded-mailbox: node/conf/conf-bounded.md
              - akka: node/conf/conf-akka.md
              - scorex: node/conf/conf-scorex.md
              - critical-dispatcher: node/conf/conf-crit.md
              - api-dispatcher: node/conf/conf-api.md
            - testnet.conf: 
              - node/testnet/testnetconf.md
              - devnet.conf: node/testnet/devnetconf.md
          - Tor: node/tor.md
        - Modes of Operation: 
            - node/modes.md
            - Archival Full Node: 
              - node/modes/archival-node.md
              - Technical Details: node/modes/archive-node-workflow.md
            - Pruned Full Node: 
              - node/modes/pruned-full-node.md
              - Technical Details: node/modes/pruned/pruned-impl.md
            - Light Full Node: 
              - node/modes/light-full-node.md
              - Digest State: node/digest-state.md
              - blocksToKeep: node/history-pruning.md
              - Technical Details: node/modes/light-techworkflow.md
            - Light SPV: 
              - node/modes/light-spv-node.md
              - Simplified Payment Verification: node/modes/spv.md
              - Technical Details: node/modes/light-spv-mode-workflow.md
              
            
          
      - Explorer: 
        - dev/stack/explorer.md
        - Local Setup: dev/stack/explorer/explorer_local.md
        - Pi Blockchain Explorer: dev/stack/rpi-blockchain-explorer.md
        - GraphQL: dev/stack/explorer/graphql.md
      - APIs: dev/stack/api.md
      - Off-Chain:
        - Oracle-Core: 
          - dev/oc/oracle.md
          - Bootstrap an Oracle Pool: tutorials/oracle-bootstrap.md
        - Off-Chain Bots: dev/oc/dex_bots.md
        - Rust Utilities: dev/oc/ergo_utilities.md
        - Plasma: dev/lib/plasma.md
    - Developer Tooling:
      - Programming Languages:
        - JVM: 
          - dev/lang/jvm.md
          - Scala: dev/lang/scala.md
          - Java: dev/lang/java.md
          - Kotlin: dev/lang/kotlin.md
        - JavaScript: dev/lang/js.md
        - Rust: dev/lang/rust.md
        - Others: 
          - Python: dev/lang/python.md
          - C#: dev/lang/csharp.md
          - Go: dev/lang/go.md
        
      - Frameworks:
        - dev/stack/frameworks.md
        - AppKit:
          - dev/stack/appkit.md
          - Tutorial: dev/stack/appkit/tutorial.md
          - Interacting with a local Node: dev/stack/appkit/appkit-node.md
          - Gradle: dev/stack/appkit/gradle.md
          - Using Appkit from Python: dev/stack/appkit/appkit_py.md
        - SigmaRust: dev/stack/sigma-rust.md
        - Fleet (JS): dev/stack/fleet.md
        - FleetSharp: dev/stack/fleetsharp.md
        - Others:
          - Ergpy: dev/stack/ergpy.md
          - RustKit: dev/stack/rustkit.md
          - Mosaik: 
            - dev/stack/mosaik/intro.md
            - Tutorial:
              - dev/stack/mosaik/intro.md
              - A simple UI: dev/stack/mosaik/tutorial2.md
              - Processing data: dev/stack/mosaik/tutorial3.md
              - ErgoPay: dev/stack/mosaik/tutorial4.md
              - Web UI: dev/stack/mosaik/tutorial5.md
              - Deployment: dev/stack/mosaik/mosaik-docker-flux.md
              - Example apps: dev/stack/mosaik/examples.md
          - JSON dApp Environment: dev/stack/jde.md
          - Headless dApp Framework: 
            - dev/stack/headless.md
            - Modules: dev/stack/headless/modules.md
        
        
      - Libaries:
        - dev/libraries.md
        - Plasma: dev/lib/plasma.md
        - Scrypto: dev/lib/scrypto.md
        - EIP12-Types: dev/lib/eip12-types.md
        - SigmaJS: dev/lib/sigmajs.md
      - Interpreters:
        - dev/stack/interpreters.md
        - sigmastate-interpreter: dev/scs/sigmastate-interpreter.md
        - sigma-rust: dev/stack/sigma-rust.md
        
      #- Bookmarks: dev/start/resources.md

    - ErgoScript: 
        - dev/scs/ergoscript.md
        - Quick Primer: 
          - dev/scs/ergoscript-primer.md
          - Paradigm: dev/scs/index.md
          - Key Concepts: dev/scs/ergoscript/ergoscript-key-concepts.md
          - Context Claims: uses/context-claims.md
          - Examples: 
            - Anyone Can Spend: dev/scs/ergoscript/anyone-can-spend.md
            - No-one-Can Spend: dev/scs/ergoscript/no-one-can-spend.md
            - Context Variables: dev/scs/ergoscript/context-variables.md
            - Code-blocks: dev/scs/ergoscript/code-blocks.md
            - Public-keys: dev/scs/ergoscript/public-keys.md
            - Functional Programming: dev/scs/ergoscript/functional-programming.md
            - Box Structure: dev/scs/ergoscript/box-structure.md
            - Storing Data: dev/scs/ergoscript/storing-data.md
          - Creating a simple P2S app: dev/scs/p2s.md
        - Sigma Language:
          - dev/scs/sigma-lang.md
          - Language Description: dev/scs/sigma/lang-spec.md
          - Simple Syntax: dev/scs/syntax.md
          - Sigma Propositions: dev/scs/sigma/sigma-prop.md
          - The Blockchain context: dev/scs/blockchain-context.md
          - Accessing boxes and registers: dev/scs/boxes-and-registers.md
          - Global Functions: dev/scs/global-functions.md 
          - Language Operations: dev/scs/sigma/lang-ops.md
        - Cryptographic: 
            - crypto.md
            - Sigma Protocols: 
              - dev/scs/sigma.md
              - Schnorr: 
                - dev/scs/sigma/schnorr.md
                - Verifying Schnorr Signatures: dev/scs/sigma/verifying.md
              - Diffie: 
                - dev/scs/sigma/diffie.md
                - ZeroJoin: dev/crypto/zerojoin.md
            - Ring Signatures:
              - 3-out-of-5 Threshold Signature: dev/scs/sigma/3-out-of-5.md
              - Distributed Signatures: node/sigs.md
        - Tooling:
          - Playgrounds:
            - Scastie: dev/scs/ergoscript/scastie.md
            - P2S Playground: dev/stack/utilities/plutomonkey.md
            - Kiosk: dev/stack/kiosk.md
            - ErgoPuppet: dev/scs/puppet.md
          - Compilers:
            - ErgoScala: dev/stack/ergoscala.md
            - CLI Compiler: dev/stack/compiler.md
          - Debugging: dev/scs/debugging.md
          - FlowCards: dev/scs/flowcards.md
        - ErgoTree: 
          - dev/scs/ergotree.md
          - Introduction: dev/scs/ergotree/ergotree-intro.md
          - As a Language: dev/scs/ergotree/ergotree-lang.md
          - Typing: dev/scs/ergotree/typing.md
          - Evaluation: dev/scs/ergotree/evaluation.md
          - Serialization: dev/scs/ergotree/serialization.md
          - Predefined Types: dev/scs/ergotree/types.md
          - Predefined Functions: dev/scs/ergotree/functions.md
          - Encoding: dev/scs/ergotree/encoding.md
          - Script Validation: dev/scs/ergotree/script-validation.md
          - Script Optimisation: dev/scs/ergotree/script-optimisation.md
          - Templates: dev/scs/ergotree/ergotree-templates.md
        - AVL Trees: 
          - dev/protocol/avl.md
          - Plasma: dev/lib/plasma.md

        - Multi-Stage Protocols: 
          - dev/scs/multi.md
          - Transaction Chains: dev/scs/tx/tx-chains.md
          - Transaction Trees: dev/scs/tx/tx-tree.md
          - Transaction Graphs: dev/scs/tx/tx-graphs.md
          - Context Enrichment: dev/scs/tx/context-enrichment.md
          - Examples:
            - Reversible Address: dev/scs/tx/reversible-address.md
            - Rock/Paper/Scissors: dev/scs/tx/rock-paper-scissor.md
            - ICO: dev/scs/tx/ico.md
        #- Data Inputs: dev/scs/data-inputs.md
       
      
          
    - Resources: 
      - dev/stack/introduction.md
      - EIPs: dev/protocol/eip.md


  - Miners:
    - Autolykos:
      - mining/autolykos.md
      - Algorithm: 
        - mining/algorithm.md
        - Emission: mining/emission.md
        - Difficulty Adjustment: mining/difficulty.md
        - Solution Verification: mining/solution-verification.md
        - Technical Breakdown: mining/algo-technical.md
      
      - Storage Rent: 
        - mining/rent.md
        - Fees: mining/rent/rent-fees.md
        - Tokens: mining/rent/rent-tokens.md
        - Spending: mining/rent/rent-spending.md
        - State Growth: mining/rent/rent-paper.md
      - ASIC Resistance: mining/asic.md     
      - Resources:
        - mining/mining-resources.md
        - CPU vs GPU: mining/cpu.md
        - EIPs:
          - Emission Retargeting Soft-Fork: mining/standards/eip27.md
          - Tweaking Difficulty Adjustment Algorithm: mining/standards/eip37.md
    - Mining: mining/index.md
    - Start Mining: 
      - mining/setup/join.md
      - Software: mining/software.md
      - Operating Systems: mining/os.md
      - Overclocking: mining/overclocking.md
      - Pools: mining/pools.md
      - Solo Mining: 
        - mining/setup/solo.md
        - Node Configuration: mining/setup/solo-node.md
        - Withdraw: mining/withdraw.md
        - FAQ:  mining/setup/solo-faq.md
      - Host a Pool: 
        - mining/setup/pool.md
        - Stratum: mining/setup/stratum.md
        - MiningCore: mining/setup/miningcore.md
       
    - Governance: mining/governance.md      
    - Revenue: mining/revenue.md
    - Tooling:
      - eco/miner-tooling.md
      - GuapSwap: eco/guapswap.md
      - Lithos: 
        - eco/lithos.md
        - SNISPs: eco/snisp.md
      - CYTI: eco/cyti.md
      - Log-Space Mining: mining/log_space.md
      - Smartpools: 
        - mining/smartpools.md
        - Subpooling: mining/setup/subpool.md

  #
  # Get Involved
  #
  - Get Involved!: 
    - contribute.md
    - Developers: 
      - contribute/devs.md
      - Bounties: contribute/bounties.md
      - Grants: contribute/grants.md
      - Roles: contribute/roles.md
    - Marketing: contribute/marketing.md
    - Sigmanauts: contribute/sigmanauts.md
    - Contribute to the docs!: contribute/docs.md
    



